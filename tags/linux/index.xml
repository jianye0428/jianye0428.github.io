<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>linux - 标签 - yejian's blog</title><link>https://lruihao.cn/tags/linux/</link><description>linux - 标签 - yejian's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>18817571704@163.com (Jian YE)</managingEditor><webMaster>18817571704@163.com (Jian YE)</webMaster><lastBuildDate>Sun, 16 Jul 2023 10:53:54 +0800</lastBuildDate><atom:link href="https://lruihao.cn/tags/linux/" rel="self" type="application/rss+xml"/><item><title>Linux Filysystem</title><link>https://lruihao.cn/posts/filesystem/</link><pubDate>Sun, 16 Jul 2023 10:53:54 +0800</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/filesystem/</guid><description><![CDATA[<h1 id="linux系统各系统文件夹下的区别">Linux系统各系统文件夹下的区别</h1>
<p>首先，usr 指 Unix System Resource，而不是User。
通常，</p>
<ul>
<li>
<p><strong>/usr/bin</strong>下面的都是系统预装的可执行程序，会随着系统升级而改变。</p>
</li>
<li>
<p><strong>/usr/local/bin</strong>目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件。</p>
</li>
</ul>
<p>如果两个目录下有相同的可执行程序，谁优先执行受到PATH环境变量的影响，比如我的一台服务器的PATH变量为。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$PATH</span></span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>这里<u>/usr/local/bin</u>优先于<u>/usr/bin</u>, 一般都是如此。</p>
<p><strong>/lib</strong>是内核级的, <strong>/usr/lib</strong>是系统级的, <strong>/usr/local/lib</strong>是用户级的.</p>
<ul>
<li>
<p><strong>/</strong> - 对你的电脑来说, 有且只有一个根目录。所有的东西都是从这里开始。举个例子: 当你在终端里输入&quot;/home&quot;，你其实是在告诉电脑，先从/(根目录)开始，再进入到home目录。</p>
</li>
<li>
<p><strong>/lib/</strong> — 包含许多被/bin/和/sbin/中的程序使用的库文件。目录/usr/lib/中含有更多用于用户程序的库文件。/lib目录下放置的是/bin和/sbin目录下程序所需的库文件。/lib目录下的文件的名称遵循下面的格式：</p>
<blockquote>
<ul>
<li>libc.so.*</li>
<li>ld*</li>
<li>仅仅被/usr目录下的程序所使用的共享库不必放到/lib目录下。只有/bin和/sbin下的程序所需要的库有必要放到/lib目录下。实际上，libm.so.*类型的库文件如果被是/bin和/sbin所需要的，也可以放到/usr/lib下。</li>
</ul>
</blockquote>
</li>
<li>
<p><strong>/bin/</strong> — 用来贮存用户命令。目录 /usr/bin 也被用来贮存用户命令。</p>
</li>
<li>
<p><strong>/sbin/</strong> — 许多系统命令(例如 shutdown)的贮存位置。目录/usr/sbin中也包括了许多系统命令。</p>
</li>
<li>
<p><strong>/root/</strong> — 根用户(超级用户)的主目录。</p>
</li>
<li>
<p><strong>/mnt/</strong> — 该目录中通常包括系统引导后被挂载的文件系统的挂载点。譬如，默认的光盘挂载点是/mnt/cdrom/.</p>
</li>
<li>
<p><strong>/boot/</strong> — 包括内核和其它系统启动期间使用的文件。</p>
</li>
<li>
<p><strong>/lost+found/</strong> — 被fsck用来放置零散文件(没有名称的文件)。</p>
</li>
<li>
<p><strong>/lib/</strong> — 包含许多被/bin/和/sbin/中的程序使用的库文件。目录/usr/lib/中含有更多用于用户程序的库文件。</p>
</li>
<li>
<p><strong>/dev/</strong> — 贮存设备文件。</p>
</li>
<li>
<p><strong>/etc/</strong> — 包含许多配置文件和目录。<strong>系统主要的设定档几乎都放置在这个目录内</strong>，例如人员的帐号密码档、各种服务的启始档等等。 一般来说，这个目录下的各档案属性是可以让一般使用者查阅的，但是只有root有权力修改。</p>
</li>
<li>
<p><strong>/var/</strong> — 用于贮存variable(或不断改变的)文件，例如日志文件和打印机假脱机文件。</p>
</li>
<li>
<p><strong>/usr/</strong> — 包括与系统用户直接有关的文件和目录，例如应用程序及支持它们的库文件。在这个目录下，你可以找到那些不适合放在/bin或/etc目录下的额外的工具。比如像游戏阿，一些打印工具拉等等。/usr目录包含了许多子目录： <strong>/usr/bin</strong>目录用于存放程序; <strong>/usr/share</strong>用于存放一些共享的数据，比如音乐文件或者图标等等;/usr/lib目录用于存放那些不能直接运行的，但却是许多程序运行所必需的一些函数库文件。</p>
</li>
<li>
<p><strong>/proc/</strong> — 一个虚拟的文件系统(不是实际贮存在磁盘上的)，它包括被某些程序使用的系统信息。</p>
</li>
<li>
<p><strong>/initrd/</strong> — 用来在计算机启动时挂载 initrd.img 映像文件的目录以及载入所需设备模块的目录。</p>
<ul>
<li><strong>警告</strong>:
<blockquote>
<p>不要删除/initrd/目录。如果你删除了该目录后再重新引导Red Hat Linux时，你将无法引导你的计算机。</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p><strong>/tmp/</strong> — 用户和程序的临时目录。/tmp给予所有系统用户读写权。**这是让一般使用者或者是正在执行的程序暂时放置档案的地方。**这个目录是任何人都能够存取的，所以你需要定期的清理一下。当然，重要资料不可放置在此目录啊。 因为FHS甚至建议在开机时，应该要将/tmp下的资料都删除。</p>
</li>
<li>
<p><strong>/home/</strong> — 用户主目录的默认位置。</p>
</li>
<li>
<p><strong>/opt/</strong> — 可选文件和程序的贮存目录。该目录主要被第三方开发者用来简易地安装和卸装他们的软件包。这里主要存放那些可选的程序。你想尝试最新的firefox测试版吗?那就装到/opt目录下吧，这样，当你尝试完，想删掉firefox的时候，你就可 以直接删除它，而不影响系统其他任何设置。安装到/opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。</p>
</li>
<li>
<p><strong>/usr/local/</strong> - 这里主要存放那些手动安装的软件，即apt或者apt-get安装的软件。它和/usr目录具有相类似的目录结构。让软件包管理器来管理/usr目录，而把自定义的脚本(scripts)放到/usr/local目录下面，我想这应该是个不错的主意。</p>
</li>
<li>
<p><strong>/media/</strong> - 有些linux的发行版使用这个目录来挂载那些usb接口的移动硬盘(包括U盘)、CD/DVD驱动器等等。</p>
</li>
</ul>
<p></p>
<h2 id="usrlocal-和-usrshare-区别">/usr/local/ 和 /usr/share/ 区别</h2>
<ul>
<li>
<p><strong>/usr/local</strong> - 这个目录一般是用来存放用户自编译安装软件的存放目录; 一般是通过源码包安装的软件，如果没有特别指定安装目录的话，一般是安装在这个目录中。这个目录下面有子目录。</p>
</li>
<li>
<p><strong>/usr/share</strong> - 系统共用的东西存放地，比如/usr/share/fonts是字体目录，/usr/share/doc和/usr/share/man帮助文件。</p>
</li>
<li>
<p><strong>/var/log</strong> - 系统日志存放，分析日志要看这个目录的东西;</p>
</li>
<li>
<p><strong>/var/spool</strong> -  打印机、邮件、代理服务器等脱机目录。</p>
</li>
</ul>
<h1 id="linux-command-notes">Linux Command Notes</h1>
<h2 id="查找文件的命令findlocatewhereiswhichtypegrep">查找文件的命令:<code>find</code>/<code>locate</code>/<code>whereis</code>/<code>which</code>/<code>type</code>/<code>grep</code></h2>
<h3 id="find">find</h3>
<p><code>find</code>命令准确，但速度非常慢，它可以查找任何类型的文件</p>
<ul>
<li>
<p>使用格式</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">find <span class="o">[</span>指定目录<span class="o">]</span> <span class="o">[</span>指定条件<span class="o">]</span> <span class="o">[</span>指定动作<span class="o">]</span></span></span></code></pre></td></tr></table>
</div>
</div><p>参数说明:</p>
<ul>
<li>[指定目录]： 所要搜索的目录及其所有子目录。默认为当前目录</li>
<li>[指定条件]： 所要搜索的文件的特征
<ul>
<li>-name：按文件名来查找文件</li>
<li>-user：按照文件的属主来查找文件</li>
<li>-group：按照文件所属的组来查找文件</li>
<li>-perm：按照文件权限来查找文件</li>
<li>-prune：不在当前指定目录中查找</li>
</ul>
</li>
<li>[指定动作]： 对搜索结果进行特定的处理
<ul>
<li>-print：将匹配的文件输出到标准输出</li>
<li>-exec：对匹配的文件执行该参数所给出的shell命令</li>
<li>-ok：和-exec的作用相同，在执行每一个命令之前，让用户来确定是否执行</li>
</ul>
</li>
</ul>
<blockquote>
<p><code>find</code>命令不加任何参数时，表示搜索路径为当前目录及其子目录，默认的动作为-print，即不过滤任何结果，也就是说输出所有的文件</p>
</blockquote>
<p>使用示例:
- 递归搜索当前目录中，所有以<code>file</code>开头的文件
<code>shell find . -name 'file*' </code>
- 递归搜索当前目录中，所有以<code>file</code>开头的文件，并显示它们的详细信息
<code>shell find . -name 'file*' -ls </code></p>
</li>
</ul>
<h3 id="locate">locate</h3>
<p><code>locate</code>命令可以说是<code>find -name</code>的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库/var/lib/locatedb，这个数据库中含有本地所有文件信息.</p>
<p>Linux自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用<code>locate</code>之前，先使用<code>updatedb</code>命令，手动更新数据库.</p>
<ul>
<li>
<p>使用格式:</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">locate <span class="o">[</span>参数<span class="o">]</span> &lt;文件名&gt;</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>使用示例:</p>
<ul>
<li>搜索<code>etc</code>目录下所有以<code>file</code>开头的文件
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">locate /etc/file</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>搜索用户主目录下，所有以f开头的文件，并且忽略大小写
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">locate -i ~/f</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
</ul>
<h3 id="whereis">whereis</h3>
<p><code>whereis</code>命令只能搜索特定格式的文件</p>
<ul>
<li>使用格式
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">whereis <span class="o">[</span>参数<span class="o">]</span> &lt;文件名&gt;</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>可搜索文集类型
<ul>
<li>二进制文件(-b)</li>
<li>源代码文件(-s)</li>
<li>说明文件(-m)</li>
</ul>
</li>
</ul>
<blockquote>
<p>如果省略参数，则返回所有信息</p>
</blockquote>
</li>
<li>使用示例:
<ul>
<li>找出名为<code>find</code>的文件位置
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">whereis find</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
</ul>
<h3 id="which">which</h3>
<p><code>which</code>命令的作用是，在<code>PATH</code>变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果, 也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>
<ul>
<li>使用格式
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">which &lt;命令&gt;</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>使用实例:
<ul>
<li>查找find命令的位置
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">which find</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
</ul>
<h3 id="type">type</h3>
<p><code>type</code>命令其实不能算查找命令，它是用来区分某个命令到底是由shell自带的，还是由shell外部的独立二进制文件提供的; 如果一个命令是外部命令，那么使用<code>-p</code>参数，会显示该命令的路径，相当于which命令。</p>
<ul>
<li>使用格式
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">type</span> &lt;命令&gt;</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>使用实例:
<ul>
<li>查看cd命令是否为shell自带的命令
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">type</span> cd</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>查看grep是否为外部命令
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">type</span> grep</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
</ul>
<h3 id="grep">grep</h3>
<p><code>grep</code>命令用于查找拥有特殊字段的文件。</p>
<ul>
<li>
<p>语法</p>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">grep <span class="o">[</span>-abcEFGhHilLnqrsvVwxy<span class="o">][</span>-A&lt;显示行数&gt;<span class="o">][</span>-B&lt;显示列数&gt;<span class="o">][</span>-C&lt;显示列数&gt;<span class="o">][</span>-d&lt;进行动作&gt;<span class="o">][</span>-e&lt;范本样式&gt;<span class="o">][</span>-f&lt;范本文件&gt;<span class="o">][</span>--help<span class="o">][</span>范本样式<span class="o">][</span>文件或目录...<span class="o">]</span></span></span></code></pre></td></tr></table>
</div>
</div><p>参数:</p>
<ul>
<li>-a 或 &ndash;text : 不要忽略二进制的数据。</li>
<li>-A&lt;显示行数&gt; 或 &ndash;after-context=&lt;显示行数&gt; : 除了显示符合范本样式的那一列之外，并显示该行之后的内容。</li>
<li>-b 或 &ndash;byte-offset : 在显示符合样式的那一行之前，标示出该行第一个字符的编号。</li>
<li>-B&lt;显示行数&gt; 或 &ndash;before-context=&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前的内容。</li>
<li>-c 或 &ndash;count : 计算符合样式的列数。</li>
<li>-C&lt;显示行数&gt; 或 &ndash;context=&lt;显示行数&gt;或-&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前后的内容。</li>
<li>-d &lt;动作&gt; 或 &ndash;directories=&lt;动作&gt; : 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</li>
<li>-e&lt;范本样式&gt; 或 &ndash;regexp=&lt;范本样式&gt; : 指定字符串做为查找文件内容的样式。</li>
<li>-E 或 &ndash;extended-regexp : 将样式为延伸的正则表达式来使用。</li>
<li>-f&lt;规则文件&gt; 或 &ndash;file=&lt;规则文件&gt; : 指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。</li>
<li>-F 或 &ndash;fixed-regexp : 将样式视为固定字符串的列表。</li>
<li>-G 或 &ndash;basic-regexp : 将样式视为普通的表示法来使用。</li>
<li>-h 或 &ndash;no-filename : 在显示符合样式的那一行之前，不标示该行所属的文件名称。</li>
<li>-H 或 &ndash;with-filename : 在显示符合样式的那一行之前，表示该行所属的文件名称。</li>
<li>-i 或 &ndash;ignore-case : 忽略字符大小写的差别。</li>
<li>-l 或 &ndash;file-with-matches : 列出文件内容符合指定的样式的文件名称。</li>
<li>-L 或 &ndash;files-without-match : 列出文件内容不符合指定的样式的文件名称。</li>
<li>-n 或 &ndash;line-number : 在显示符合样式的那一行之前，标示出该行的列数编号。</li>
<li>-o 或 &ndash;only-matching : 只显示匹配PATTERN 部分。</li>
<li>-q 或 &ndash;quiet或&ndash;silent : 不显示任何信息。</li>
<li>-r 或 &ndash;recursive : 此参数的效果和指定&quot;-d recurse&quot;参数相同。</li>
<li>-s 或 &ndash;no-messages : 不显示错误信息。</li>
<li>-v 或 &ndash;invert-match : 显示不包含匹配文本的所有行。</li>
<li>-V 或 &ndash;version : 显示版本信息。</li>
<li>-w 或 &ndash;word-regexp : 只显示全字符合的列。</li>
<li>-x &ndash;line-regexp : 只显示全列符合的列。</li>
<li>-y : 此参数的效果和指定&quot;-i&quot;参数相同。</li>
</ul>
</li>
<li>
<p>示例:</p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 查找指定目录/etc/acpi 及其子目录（如果存在子目录的话）下所有文件中包含字符串&#34;update&#34;的文件，并打印出该字符串所在行的内容</span>
</span></span><span class="line"><span class="cl">grep -r update /etc/acpi</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 查看符合条件的日志条目。</span>
</span></span><span class="line"><span class="cl">grep -n <span class="s1">&#39;2019-10-24 00:01:11&#39;</span> *.log</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 只匹配文本文件，不匹配二进制文件的命令</span>
</span></span><span class="line"><span class="cl">grep -srn <span class="s2">&#34;parameter&#34;</span> .  --binary-files<span class="o">=</span>without-match</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
]]></description></item><item><title>linux 文件权限</title><link>https://lruihao.cn/posts/linux-permission/</link><pubDate>Sat, 30 Jul 2022 17:15:44 +0800</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/linux-permission/</guid><description><![CDATA[<p>记录 linux 系统下文件权限相关的内容，Mac OS 下类似。</p>
<h2 id="查看文件权限">查看文件权限</h2>
<p>查看 linux 系统下的文件权限，可以使用 <code>ll</code> 命令或者 <code>ls</code> 命令 带 <code>-l</code>（长列表选项）</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">➜  ~ ll
</span></span><span class="line"><span class="cl">total <span class="m">160</span>
</span></span><span class="line"><span class="cl">drwx------@  <span class="m">8</span> liruihao  staff   256B Jul  <span class="m">5</span> 14:47 Applications
</span></span><span class="line"><span class="cl">drwx------@ <span class="m">10</span> liruihao  staff   320B Jul <span class="m">27</span> 11:31 Desktop
</span></span><span class="line"><span class="cl">drwx------+  <span class="m">7</span> liruihao  staff   224B Jun <span class="m">17</span> 15:01 Documents
</span></span><span class="line"><span class="cl">drwx------@ <span class="m">22</span> liruihao  staff   704B Jul <span class="m">29</span> 16:35 Downloads
</span></span><span class="line"><span class="cl">drwx------@ <span class="m">94</span> liruihao  staff   2.9K Jul <span class="m">23</span> 19:02 Library
</span></span><span class="line"><span class="cl">drwx------   <span class="m">4</span> liruihao  staff   128B Nov <span class="m">13</span>  <span class="m">2021</span> Movies
</span></span><span class="line"><span class="cl">drwx------+  <span class="m">6</span> liruihao  staff   192B Nov <span class="m">18</span>  <span class="m">2021</span> Music
</span></span><span class="line"><span class="cl">drwx------+  <span class="m">9</span> liruihao  staff   288B Apr <span class="m">26</span> 10:25 Pictures
</span></span><span class="line"><span class="cl">drwxr-xr-x+  <span class="m">5</span> liruihao  staff   160B Nov <span class="m">14</span>  <span class="m">2021</span> Public
</span></span><span class="line"><span class="cl">drwxr-xr-x   <span class="m">5</span> liruihao  staff   160B Jul <span class="m">29</span> 17:48 file-share
</span></span><span class="line"><span class="cl">drwxr-xr-x   <span class="m">3</span> liruihao  staff    96B Jul <span class="m">26</span> 17:17 node_modules
</span></span><span class="line"><span class="cl">-rw-r--r--   <span class="m">1</span> liruihao  staff    27B Jun <span class="m">24</span> 13:47 package-lock.json
</span></span><span class="line"><span class="cl">drwxr-xr-x  <span class="m">20</span> liruihao  staff   640B Jul <span class="m">29</span> 22:20 workspace
</span></span><span class="line"><span class="cl">-rw-r--r--   <span class="m">1</span> liruihao  staff    86B Jul <span class="m">26</span> 17:17 yarn.lock</span></span></code></pre></td></tr></table>
</div>
</div><p>文件列表信息分为：文件类型、权限、链接数、所属用户、所属用户组、文件大小、最后修改时间、文件名。</p>
<h2 id="文件类型">文件类型</h2>
<p>linux 一共有 7 种文件类型，分别如下：</p>
<ul>
<li>
<p><code>-</code>: 普通文件</p>
</li>
<li>
<p><code>d</code>: 目录文件</p>
</li>
<li>
<p><code>l</code>: 链接文件</p>
</li>
<li>
<p><code>b</code>: 块设备文件</p>
</li>
<li>
<p><code>p</code>: 管道文件</p>
</li>
<li>
<p><code>c</code>: 字符设备文件</p>
</li>
<li>
<p><code>s</code>: 套接口文件/数据接口文件</p>
<p><em>后四种是特殊文件</em></p>
</li>
</ul>
<h2 id="文件权限对应关系">文件权限对应关系</h2>
<table>
<thead>
<tr>
<th>权限</th>
<th>含义</th>
<th>对应数字</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>读权限</td>
<td>4</td>
</tr>
<tr>
<td>w</td>
<td>写权限</td>
<td>2</td>
</tr>
<tr>
<td>x</td>
<td>执行权限</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>读、写、运行三项权限用数字表示就是 <strong>r=4,w=2,x=1</strong>。所以，<code>-rw-r--r--</code> 用数字表示成 644。</p>
<p>权限字段 <code>-rwxrwxrwx</code> 的内容总共会有 10 个 <code>-</code>，第一个表示文件类型，如该文件是<strong>文件 (-表示）</strong>，<strong>文件夹 (d 表示）</strong>, <strong>连接文件 (l 表示）</strong>，后面 9 个按照每三位为一组分。</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">drwxr-xr-x   <span class="m">5</span> liruihao  staff   160B Jul <span class="m">29</span> 17:48 file-share</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>d</strong>: 代表文件夹</p>
<p><strong>rwx</strong>: 代表文件所有者 (u 表示）权限，这里是 liruihao，liruihao 对该文件拥有读写执行权限。</p>
<p><strong>r-x</strong>: 代表所属（g 表示）的权限，这里同组用户拥有对该文件读和执行的权限。</p>
<p><strong>r-x</strong>: 代表其他用户（o 表示）的权限，这里和上面权限一样。</p>]]></description></item><item><title>Cron 表达式的基本语法</title><link>https://lruihao.cn/posts/cron/</link><pubDate>Wed, 25 Mar 2020 09:19:44 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/cron/</guid><description><![CDATA[<h2 id="基本语法">基本语法</h2>
<blockquote>
<p><code>&lt;秒&gt; &lt;分钟&gt; &lt;小时&gt; &lt;日期 day-of-month&gt; &lt;月份&gt; &lt;星期 day-of-week&gt;</code></p>
</blockquote>
<p>Cron 表达式是一个具有时间含义的字符串，字符串以 5 个空格隔开，分为 6 个域，格式为 <code>X X X X X X</code>。其中 X 是一个域的占位符。单个域有多个取值时，使用半角逗号，隔开取值。每个域可以是确定的取值，也可以是具有逻辑意义的特殊字符。</p>
<h2 id="域取值">域取值</h2>
<table>
<thead>
<tr>
<th>位置</th>
<th>字段</th>
<th>约束</th>
<th>取值</th>
<th>可使用的特殊符号</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>秒</td>
<td>必须</td>
<td>0-59</td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>2</td>
<td>分钟</td>
<td>必须</td>
<td>0-59</td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>3</td>
<td>小时</td>
<td>必须</td>
<td>0-23（0 为午夜）</td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>4</td>
<td>日期</td>
<td>必须</td>
<td>1-31</td>
<td><code>, - * ? / L W</code></td>
</tr>
<tr>
<td>5</td>
<td>月份</td>
<td>必须</td>
<td>1-12 或者 JAN-DEC</td>
<td><code>, - * /</code></td>
</tr>
<tr>
<td>6</td>
<td>星期</td>
<td>必须</td>
<td>1-7 或者 SUN-SAT (<code>1</code> 代表星期一）</td>
<td><code>, - ? / L #</code></td>
</tr>
</tbody>
</table>
<h2 id="特殊符号">特殊符号</h2>
<table>
<thead>
<tr>
<th style="text-align:left">符号</th>
<th style="text-align:left">含义</th>
<th style="text-align:left">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>*</code></td>
<td style="text-align:left">所有可能的值。</td>
<td style="text-align:left">在月域中，<code>*</code>表示每个月；在星期域中，<code>*</code>表示星期的每一天。</td>
</tr>
<tr>
<td style="text-align:left"><code>,</code></td>
<td style="text-align:left">列出枚举值。</td>
<td style="text-align:left">在分钟域中，<code>5,20</code>表示分别在 5 分钟和 20 分钟触发一次。</td>
</tr>
<tr>
<td style="text-align:left"><code>-</code></td>
<td style="text-align:left">范围。</td>
<td style="text-align:left">在分钟域中，<code>5-20</code>表示从 5 分钟到 20 分钟之间每隔一分钟触发一次。</td>
</tr>
<tr>
<td style="text-align:left"><code>/</code></td>
<td style="text-align:left">指定数值的增量。</td>
<td style="text-align:left">在分钟域中，<code>0/15</code>表示从第 0 分钟开始，每 15 分钟。在分钟域中<code>3/20</code>表示从第 3 分钟开始，每 20 分钟。<strong>*/</strong> 和 <strong>0/</strong> 相同</td>
</tr>
<tr>
<td style="text-align:left"><code>?</code></td>
<td style="text-align:left">不指定值，仅日期和星期域支持该字符。</td>
<td style="text-align:left">当日期或星期域其中之一被指定了值以后，为了避免冲突，需要将另一个域的值设为<code>?</code>。</td>
</tr>
<tr>
<td style="text-align:left"><code>L</code></td>
<td style="text-align:left">单词 Last 的首字母，表示最后一天，仅日期和星期域支持该字符。<strong>说明</strong> 指定<code>L</code>字符时，避免指定列表或者范围，否则，会导致逻辑问题。</td>
<td style="text-align:left">在日期域中，<code>L</code>表示某个月的最后一天。在星期域中，<code>L</code>表示一个星期的最后一天，也就是星期日（<code>SUN</code>）。如果在<code>L</code>前有具体的内容，例如，在星期域中的<code>6L</code>表示这个月的最后一个星期六。</td>
</tr>
<tr>
<td style="text-align:left"><code>W</code></td>
<td style="text-align:left">除周末以外的有效工作日，在离指定日期的最近的有效工作日触发事件。<code>W</code>字符寻找最近有效工作日时不会跨过当前月份，连用字符<code>LW</code>时表示为指定月份的最后一个工作日。</td>
<td style="text-align:left">在日期域中<code>5W</code>，如果 5 日是星期六，则将在最近的工作日星期五，即 4 日触发。如果 5 日是星期天，则将在最近的工作日星期一，即 6 日触发；如果 5 日在星期一到星期五中的一天，则就在 5 日触发。</td>
</tr>
<tr>
<td style="text-align:left"><code>#</code></td>
<td style="text-align:left">确定每个月第几个星期几，仅星期域支持该字符。</td>
<td style="text-align:left">在星期域中，<code>4#2</code>表示某月的第二个星期四。</td>
</tr>
</tbody>
</table>
<h2 id="举个栗子-">举个栗子 🌰</h2>
<table>
<thead>
<tr>
<th style="text-align:left">表达式</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>0 0/5 * * * ?</code></td>
<td style="text-align:left">每隔 5 分钟执行一次</td>
</tr>
<tr>
<td style="text-align:left"><code>10 0/5 * * * ?</code></td>
<td style="text-align:left">每隔 5 分钟执行一次，每次执行都在分钟开始的 10 秒，例如 10:00:10、10:05:10 等等。</td>
</tr>
<tr>
<td style="text-align:left"><code>0 30 10-13 ? * WED,FRI</code></td>
<td style="text-align:left">每周三和每周五的 10:30、11:30、12:30、13:30 执行。</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0/30 8-9 5,20 * ?</code></td>
<td style="text-align:left">每个月的 5 号和 20 号的 8 点和 10 点之间每隔 30 分钟执行一次，也就是 8:00、8:30、9:00 和 9:30。</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 ? * *</code></td>
<td style="text-align:left">每天上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 * * ?</code></td>
<td style="text-align:left">每天上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0 12 * * ?</code></td>
<td style="text-align:left">每天中午 12:00 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0 10,14,16 * * ?</code></td>
<td style="text-align:left">每天上午 10:00 点、下午 14:00 以及下午 16:00 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0/30 9-17 * * ?</code></td>
<td style="text-align:left">每天上午 09:00 到下午 17:00 时间段内每隔半小时执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 * 14 * * ?</code></td>
<td style="text-align:left">每天下午 14:00 到下午 14:59 时间段内每隔 1 分钟执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0-5 14 * * ?</code></td>
<td style="text-align:left">每天下午 14:00 到下午 14:05 时间段内每隔 1 分钟执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0/5 14 * * ?</code></td>
<td style="text-align:left">每天下午 14:00 到下午 14:55 时间段内每隔 5 分钟执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0/5 14,18 * * ?</code></td>
<td style="text-align:left">每天下午 14:00 到下午 14:55、下午 18:00 到下午 18:55 时间段内每隔 5 分钟执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 0 12 ? * WED</code></td>
<td style="text-align:left">每个星期三中午 12:00 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 15 * ?</code></td>
<td style="text-align:left">每月 15 日上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 L * ?</code></td>
<td style="text-align:left">每月最后一日上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 ? * 6L</code></td>
<td style="text-align:left">每月最后一个星期六上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 15 10 ? * 6#3</code></td>
<td style="text-align:left">每月第三个星期六上午 10:15 执行任务</td>
</tr>
<tr>
<td style="text-align:left"><code>0 10,44 14 ? 3 WED</code></td>
<td style="text-align:left">每年 3 月的每个星期三下午 14:10 和 14:44 执行任务</td>
</tr>
</tbody>
</table>]]></description></item><item><title>HustOJ 基础搭建教程</title><link>https://lruihao.cn/posts/hustoj/</link><pubDate>Fri, 17 May 2019 23:08:04 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/hustoj/</guid><description><![CDATA[<blockquote>
<p>目前 HustOj 在 GitHUb 地址是：<a href="https://github.com/zhblue/hustoj"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/zhblue/hustoj<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a><br>
<strong>安装时注意 ubuntu 版本</strong>，没条件的可以在自己 ubuntu 上尝试，或者虚拟机上（关注公众号回复<code>ubuntu16.04</code>获取 iso 镜像文件），也可以在云实验室的云服务器上做做实验。<br>
更多说明及 ACM/NOIP 题库下载见官网博客 <a href="http://www.hustoj.com/"target="_blank" rel="external nofollow noopener noreferrer">代码的那些事|程序员回忆录<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
</blockquote>
<h2 id="快速安装-oj">快速安装 OJ</h2>
<p>下载</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/zhblue/hustoj/master/trunk/install/install-ubuntu16+.sh</span></span></code></pre></td></tr></table>
</div>
</div><p>安装</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo bash install-ubuntu16+.sh</span></span></code></pre></td></tr></table>
</div>
</div><p>等待中一路回车，当提示 done！ 则表示安装成功：
</p>
<h2 id="使用-hustoj">使用 HustOJ</h2>
<p>打开网页/IP 地址<br>
注册 admin<br>
用 admin 作为用户名注册一个用户，将会自动成为管理员。<br>
<br>
注册成功，会提示：<br>
<br>
登录后台<br>
登录账号，并点击右上角的管理：<br>
<br>
添加测试题目<br>
在后台选择添加题目，添加成功：<br>
<br>
然后再提交代码测试判题机。</p>
<h2 id="说明">说明</h2>
<p>安装后几个重要配置文件的位置</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/home/judge/etc/judge.conf
</span></span><span class="line"><span class="cl">/home/judge/src/web/include/db_info.inc.php
</span></span><span class="line"><span class="cl">/etc/php5/fpm/php.ini 或 /etc/php7.0/fpm/php.ini
</span></span><span class="line"><span class="cl">/etc/nginx/sites-enabled/default</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>本地搭建网站服务器并穿透内网</title><link>https://lruihao.cn/posts/ngrok/</link><pubDate>Wed, 03 Apr 2019 19:29:43 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/ngrok/</guid><description><![CDATA[<blockquote>
<p>一直都想在自己电脑上搭建一个网站或者把自己的电脑做成服务器，今天终于简单实现了。还有很多知识需要学习，简单记录一下。</p>
</blockquote>
<h2 id="搭建环境">搭建环境</h2>
<p>我的电脑是<code>ubuntu+windows</code>双系统的，所以我先在 ubuntu 上面装了一个宝塔面板，方便通过 web 管理电脑，宝塔安装好后安装相关的环境<code>mysql,php,nginx</code>等。我们现在只能通过本地 ip<code>127.0.0.1:8888</code>访问面板。</p>
<h2 id="ngrok-穿透">ngrok 穿透</h2>
<p>去 ngrok 注册登录，购买隧道（有免费的），然后绑定端口，绑定域名，这里我们拿端口<code>8888</code>和域名<code>test.lruihao.cn</code>做实验，也就是宝塔面板的端口，这样我们就可以透过域名远程访问本地服务器，这样是不是开始有云服务器的感觉了。然后宝塔面板设置也绑定好域名<code>test.lruihao.cn</code>,dns 服务商那里做好相应的解析。<br>
然后在 ngrok 那里下载 sunny 客户端文件，我们是 ubuntu 选择<code>linux-64bits</code>版本。解压后在 ubuntu 打开终端进入 sunny 文件目录，权限给到 755，运行命令<code>./sunny clientid xxxxxxx</code> 后面的你的隧道订单的 id。</p>
<p>现在就可以通过互联网访问我的 ubuntu 服务器了。</p>
<h2 id="搭建网站">搭建网站</h2>
<p>前面两步搞定，搭建网站就没问题了。<br>
我们只要把网站的端口按第二步的在 ngrok 设置好就可以穿透了。</p>
<h2 id="注意">注意</h2>
<p>访问本地网站的必要条件是你的电脑得是开机状态而且有网络。</p>]]></description></item><item><title>ubuntu + windows 双系统默认启动项设置</title><link>https://lruihao.cn/posts/windefault/</link><pubDate>Thu, 21 Mar 2019 12:48:30 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/windefault/</guid><description><![CDATA[<div class="featured-image">
        <img src="/posts/windefault/images/1.png" referrerpolicy="no-referrer">
      </div><blockquote>
<p>双系统默认启动项是 Ubuntu，而日常使用最多的还是 Windows，所以说很不方便，一不小心就开机到 Ubuntu 去了。今天来设置一下。</p>
</blockquote>
<h2 id="修改etcdefaultgrub文件">修改<code>/etc/default/grub</code>文件</h2>
<blockquote>
<p>同时按住键盘上的“Ctrl Alt T”三个键（即快捷键“Ctrl+Alt+T”），打开终端窗口。在终端内输入 sudo gedit /etc/default/grub 按 Enter 键确认，提示输入用户密码，输入的用户密码是看不见的，不要管它，输入完成确认即可打开 grub 文件。</p>
</blockquote>
<p></p>
<blockquote>
<p>把 grub 文件中的 <code>GRUB_DEFAULT=0</code> 中的 0 改为 <code>saved</code>, 把 <code>GRUB_TIMEOUT=10</code> 中的 10 改为 5。（这里的 5 表示开机时等待选择操作系统是时间是 5 秒）<br>
在文件末尾添加 <code>GRUB_SAVEDEFAULT=true</code>后保存文件并退出。</p>
</blockquote>
<p></p>
<h2 id="更新启动配置文件">更新启动配置文件</h2>
<blockquote>
<p>在终端输入 sudo update-grub 按 Enter 键确认</p>
</blockquote>
<p></p>
<h2 id="重启">重启</h2>
<p><code>sudo reboot</code>或者点击重启，重启到启动菜单时，选择你要更改为默认启动项的系统，按 Enter 键确认启动即可，下次启动时刚刚选择的系统即为默认启动系统，直到你手动选择启动其他的系统为止。以后可以轻松的来回切换默认系统了。</p>]]></description></item><item><title>宝塔面板安装</title><link>https://lruihao.cn/posts/bt/</link><pubDate>Mon, 18 Mar 2019 21:31:43 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/bt/</guid><description><![CDATA[<div class="featured-image">
        <img src="/posts/bt/images/1.png" referrerpolicy="no-referrer">
      </div><p>极速方便的一键配置与管理，免除繁琐的命令行操作，通过 Web 面板一键即可操作实现。可选择安装 lamp 或者 lnmp 环境，可创建及管理网站，可创建及管理数据库，可创建及管理 FTP 等等。<a href="https://www.bt.cn/?invite_code=MV9sYXJnZHI="target="_blank" rel="external nofollow noopener noreferrer">宝塔官网介绍<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<h2 id="系统要求">系统要求</h2>
<blockquote>
<p>操作系统：全新系统（支持 CentOS、Ubuntu、Debian、Fedora、Deepin)，<br>
确保是干净的操作系统，没有安装过其它环境带的 Apache/Nginx/php/MySQL<br>
宝塔 Linux6.0 版本是基于 centos7 开发的，强烈建议使用 centos7.x 系统<br>
内存要求：内存要求最低 512MB，推荐 768MB 以上，纯面板约占系统 60MB 内存.</p>
</blockquote>
<h2 id="安装方法">安装方法</h2>
<p>官方号称 2 分钟装好面板，一键管理服务器。</p>
<blockquote>
<p>使用 SSH 连接工具，如宝塔远程桌面助手连接到您的 Linux 服务器后，挂载磁盘，根据系统执行相应命令开始安装（大约 2 分钟完成面板安装）：</p>
</blockquote>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">yum install -y wget <span class="o">&amp;&amp;</span> wget -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="o">&amp;&amp;</span> sh install.sh</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="o">&amp;&amp;</span> sudo bash install.sh</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="o">&amp;&amp;</span> bash install.sh</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell"><span class="line"><span class="cl">wget -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="o">&amp;&amp;</span> bash install.sh</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<h2 id="搭建-ftp-和云盘服务器">搭建 ftp 和云盘服务器</h2>
<p>可以很傻瓜式的搭建自己的云盘，和平时用的比较多的 ftp 服务器。搭建静态网站也可以用 ftp 来上传文件。</p>]]></description></item><item><title>win10,ubuntu 双系统时间不一致</title><link>https://lruihao.cn/posts/ubuntutime/</link><pubDate>Fri, 15 Mar 2019 14:28:10 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/ubuntutime/</guid><description><![CDATA[<blockquote>
<p>我的 Ubuntu 和 Windows 双系统是 Ubuntu 是第一启动项，所以总是开机忘记点下键，一进 Ubuntu 系统时间就不对了（总是少了 8 小时），回到 Windows 时间也是错的。知道是错的调整一下还好。忘记调了有时候真的会误事。比如说 git 版本控制提交会遇到问题种种等。</p>
</blockquote>
<h2 id="原因">原因</h2>
<p>在安装 Ubuntu 和 Windows 双系统的情况下，Ubuntu 的时间总会和 Windows 的时间相差 8 小时，原因在于 widows 认为 BIOS 时间是本地时间，Ubuntu 认为 BIOS 时间是 UTC 时间，即协调世界时，(Universal Time Coordinated) 英文缩写，是由国际无线电咨询委员会规定和推荐，并由国际时间局 (BIH) 负责保持的以秒为基础的时间标度。UTC 相当于本初子午线（即经度 0 度）上的平均太阳时，过去曾用格林威治平均时 (GMT) 来表示。北京时间比 UTC 时间早 8 小时，以 1999 年 1 月 1 日 00:00 UTC 为例，UTC 时间是零点，北京时间为 1999 年 1 月 1 日早上 8 点整。)，所以我们在时间上面相隔了 8 个小时。这个时候 bios 的时间和系统的时间当然是不一致，一个代表 utc 时间，一个代表 cst（＋ 8 时区），即我们常用的时间。</p>
<h2 id="方法一">方法一</h2>
<p>在 Windows 下 进行如下修改：（博主 win10,win7 自测）<br>
以管理员身份运行 CMD（<code>win+x 后选择 Windows Powershell（管理员）</code></p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span></span></code></pre></td></tr></table>
</div>
</div><p>重启看看时间发现 ok 了。</p>
<h2 id="方法二">方法二</h2>
<p>老版 Ubuntu（Ubuntu10 左右）：<br>
修改 <code>/etc/default/rcS</code> 文件<br>
编辑 <code>/etc/default/rcS</code> 将 <code>UTC=yes</code>改成 <code>UTC=no</code> 。</p>
<p>新版 Ubuntu（Ubuntu16.04）：
新版本的 Ubuntu 使用 systemd 启动之后，时间也改成了由 timedatectl 来管理，此方法就不适用了。</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo timedatectl set-local-rtc 1</span></span></code></pre></td></tr></table>
</div>
</div><p>先在 ubuntu 下更新一下时间，确保时间无误：</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo apt-get install ntpdate
</span></span><span class="line"><span class="cl">$sudo ntpdate time.windows.com</span></span></code></pre></td></tr></table>
</div>
</div><p>然后将时间更新到硬件上：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$sudo hwclock --localtime --systohc</span></span></code></pre></td></tr></table>
</div>
</div><p>重新进入 windows10，发现时间恢复正常了！</p>]]></description></item><item><title>shell 脚本初体验</title><link>https://lruihao.cn/posts/shell/</link><pubDate>Mon, 29 Oct 2018 11:57:39 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/shell/</guid><description><![CDATA[<p>今天上机学了几个小命令</p>
<ul>
<li>read</li>
<li>echo</li>
<li>if</li>
</ul>
<p>然后自己写了一个小脚本觉得还挺有趣的</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="c1">#liruihao</span>
</span></span><span class="line"><span class="cl"><span class="c1">#menu.sh</span>
</span></span><span class="line"><span class="cl"><span class="c1">#sudo apt curl install nyancat sl figlet toilet cowsay</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;-------------菜-单--------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;------------1-打印二维码--------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;------------2-彩虹猫------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;------------3-小火切------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;------------4-打字机------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;------------5-小许牛------------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;----------Ctrl+c 暂停程序--------&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;请输入序号！&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">read</span> i
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;请输入网址！&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">read</span> s1
</span></span><span class="line"><span class="cl">       	<span class="nb">echo</span> <span class="nv">$s1</span> <span class="p">|</span>curl -F-<span class="o">=</span><span class="se">\&lt;</span>- qrenco.de
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">2</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">	nyancat
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">3</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">	sl
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">4</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;请输入字符串！&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">read</span> s2
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;选择样式：&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;------样式 1-----&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;------样式 2-----&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">read</span> j
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nb">test</span> <span class="nv">$j</span> -eq <span class="m">1</span>
</span></span><span class="line"><span class="cl">	<span class="k">then</span>
</span></span><span class="line"><span class="cl">		figlet <span class="nv">$s2</span>
</span></span><span class="line"><span class="cl">	<span class="k">else</span>
</span></span><span class="line"><span class="cl">		toilet -f mono12 -F gay <span class="nv">$s2</span>
</span></span><span class="line"><span class="cl">	<span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">5</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;请输入字符串！&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">read</span> s3
</span></span><span class="line"><span class="cl">	cowsay <span class="nv">$s3</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;任意建继续！&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">read</span> x
</span></span><span class="line"><span class="cl">clear
</span></span><span class="line"><span class="cl">./menu.sh</span></span></code></pre></td></tr></table>
</div>
</div><p>




</p>]]></description></item><item><title>云服务器 CentOS 系统搭建 web 服务</title><link>https://lruihao.cn/posts/web-server-yun/</link><pubDate>Mon, 29 Oct 2018 09:15:58 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/web-server-yun/</guid><description><![CDATA[<h3 id="搭建-apache-web-服务">搭建 Apache web 服务</h3>
<ol>
<li>安装 Apache 超文本传输协议 (HTTP) 服务器的主程序</li>
</ol>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@VM_0_6_centos /]# yum install -y httpd</span></span></code></pre></td></tr></table>
</div>
</div><p>注意安装目录，可通过 cd 命令切换。</p>
<ol start="2">
<li>启动 HTTP 服务</li>
</ol>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@VM_0_6_centos /]# systemctl start httpd.service</span></span></code></pre></td></tr></table>
</div>
</div><p>如果启动失败，可通过 systemctl status httpd.service 查看错误原因。<br>
启动成功，证明 http 服务已经可以使用，发现还需要把本地文件传到服务器。<br>
默认根目录<code>/var/www/html/</code></p>
<h3 id="使用-ssh-连接服务器">使用 SSH 连接服务器</h3>
<p>尝试了两种方式：PuTTY 和 Xshell（推荐）</p>
<h4 id="xshell-方式">Xshell 方式</h4>
<p>官网下载安装 Xshell 打开，输入 ip 账号密码连接主机。</p>
<p>使用 lrzsz 方式上传下载文件<br>
步骤 1：在服务器安装 lrzsz</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@VM_0_6_centos /]# yum -y install lrzsz</span></span></code></pre></td></tr></table>
</div>
</div><p>步骤 2：输入命令<code>rz</code>打开上传窗口（可以选择多个文件。)<br>
使用<code>sz</code>文件名命令可打开从服务器下载文件的保存窗口。</p>
<h3 id="修改-http-配置">修改 HTTP 配置</h3>
<p>1.VIM 编辑器打开配置文件</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[root@VM_0_6_centos /]# vim /etc/httpd/conf/httpd.conf</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>
<p>按<code>I</code>键进入编辑模式</p>
</li>
<li>
<p>找到并修改以下内容</p>
</li>
</ol>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ServerAdmin 管理员邮箱，用于浏览器请求报错时展示
</span></span><span class="line"><span class="cl">DocumentRoot 访问根目录（默认：/var/www/html），如项目存放在其他地方，可修改为项目存放位置
</span></span><span class="line"><span class="cl">&lt;Directory &#34;/var/www/html&#34;&gt; 同 DocumentRoot 配置
</span></span><span class="line"><span class="cl">ServerName 服务器 IP 或 域名</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>
<p>按下 ESC 键输入<code>:wq</code>保存退出</p>
</li>
<li>
<p>重启服务<code>service httpd restart</code></p>
</li>
<li>
<p>打开浏览器，输入地址访问<br>
如：我的项目索引 html 路径为 <code>love/index.html</code>，输入<br>
<code>http://IP 地址或域名/love/index.html</code></p>
</li>
<li>
<p>访问不成功，先检查网络，再查看 http 服务是否开启，最后检查配置；<br>
访问成功，配置完成。</p>
</li>
</ol>
]]></description></item><item><title>termux 基本使用教程</title><link>https://lruihao.cn/posts/termux1/</link><pubDate>Tue, 23 Oct 2018 22:16:02 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/termux1/</guid><description><![CDATA[<blockquote>
<p>前面有一篇文章写到一些，<a href="https://lruihao.cn/posts/termux/"target="_blank" rel="external nofollow noopener noreferrer">在 Android 上搭建 hexo 博客<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>
<strong>本文当初摘要自 <a href="https://www.sqlsec.com/2018/05/termux.html?yyue=a21bo.50862.201879"target="_blank" rel="external nofollow noopener noreferrer">国光个人博客<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></strong>
如若作者博客 IP 被墙，可前往国光第三方博客诸如 csdn 等。<a href="https://www.freebuf.com/geek/170510.html"target="_blank" rel="external nofollow noopener noreferrer">备用<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
</blockquote>
<h3 id="初始化">初始化</h3>
<p>下载并初始化 termux</p>
<h4 id="安装-vim">安装 vim</h4>
<p>安装编辑器 vim</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pkg install vim</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="解决中文乱码问题">解决中文乱码问题</h4>
<p>在 home 目录下，新建 <code>.vimrc</code> 文件</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vim .vimrc</span></span></code></pre></td></tr></table>
</div>
</div><p>添加内容如下：</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
</span></span><span class="line"><span class="cl">set enc=utf8
</span></span><span class="line"><span class="cl">set fencs=utf8,gbk,gb2312,gb18030</span></span></code></pre></td></tr></table>
</div>
</div><p>然后 source 下变量：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">source .vimrc</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="修改启动问候语">修改启动问候语</h4>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vim $PREFIX/etc/motd</span></span></code></pre></td></tr></table>
</div>
</div><p>按 i 然后编辑，比如</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">		www.lruihao.cn
</span></span><span class="line"><span class="cl">		    李瑞豪</span></span></code></pre></td></tr></table>
</div>
</div><p>Esc 然后：wq 退出</p>
<h4 id="管理员权限">管理员权限</h4>
<p>手机已经 root, 安装 tsu, 这是一个 su 的 termux 版本，用来在 termux 上替代 su:</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pkg install tsu</span></span></code></pre></td></tr></table>
</div>
</div><p>然后终端下面输入：</p>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">tsu</span></span></code></pre></td></tr></table>
</div>
</div><p>即可切换 root 用户，这个时候会弹出 root 授权提示。在管理员身份下，输入 exit 可回到普通用户身份。</p>
<h3 id="美化">美化</h3>
<p><a href="https://github.com/Cabbagec/termux-ohmyzsh"target="_blank" rel="external nofollow noopener noreferrer">Termux-ohmyzsh<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<p>作用 ： 美化之外，主要使用了 zsh 来替代 bash 作为默认 shell。使用一键安装脚本来安装，一步到位，顺便启动了外置存储，可以直接访问 SD 卡下的目录，创建软文件夹。</p>
<h4 id="使用">使用</h4>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sh -c &#34;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&#34;</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置色彩样式">设置色彩样式：</h4>
<p>运行 chcolor 更换色彩样式，或者：</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">~/.termux/colors.sh</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置字体">设置字体</h4>
<p>运行 chfont 更换字体，或者：</p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">~/.termux/fonts.sh</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="需要软件包">需要软件包：</h4>
<ul>
<li>curl</li>
</ul>
<h3 id="访问外置存储">访问外置存储</h3>
<p>执行过上面的 zsh 一键配置脚本后，并且授予文件访问权限的话，会在家目录生成 storage 目录，并且生成若干目录，软连接都指向外置存储卡的相应目录<br>
可以让从外置储存复制文件进 system 分区</p>
<h4 id="创建-qq-文件夹软连接">创建 QQ 文件夹软连接</h4>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="创建-blog2-文件夹软连接备份文件">创建 blog2 文件夹软连接备份文件</h4>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ln -s /data/data/com.termux/files/home/storage/shared/blog2 blog2</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装-hexo">安装 hexo</h3>
<h4 id="安装准备">安装准备</h4>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pkg install nodejs
</span></span><span class="line"><span class="cl">pkg install git
</span></span><span class="line"><span class="cl">npm install hexo-cli -g
</span></span><span class="line"><span class="cl">npm install hexo-deployer-git --save
</span></span><span class="line"><span class="cl">pkg install openssh</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="初始化-hexo">初始化 hexo</h4>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">hexo init blog
</span></span><span class="line"><span class="cl">cd blog
</span></span><span class="line"><span class="cl">hexo g
</span></span><span class="line"><span class="cl">hexo s</span></span></code></pre></td></tr></table>
</div>
</div><p>浏览器输入<code>127.0.0.1:4000</code>查看效果</p>
<h4 id="链接-githubcodinggitee-等远程仓库">链接 github,coding,gitee 等远程仓库</h4>
<div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ssh-keygen -t rsa -C &#34;your_email@example.com&#34;
</span></span><span class="line"><span class="cl">#这将按照你提供的邮箱地址，创建一对密钥（个人喜欢一路回车）</span></span></code></pre></td></tr></table>
</div>
</div><p>找到<code>~/.ssh/id_rsa.pub</code>这个文件复制里面的内容，到对应的平台生成 SSH 公钥</p>
<h4 id="设置用户信息">设置用户信息</h4>
<div class="highlight" id="id-17"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git config --global user.name &#34;lruihao&#34;
</span></span><span class="line"><span class="cl">git config --global user.email  &#34;1074627678@qq.com&#34;</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="测试链接">测试链接</h4>
<div class="highlight" id="id-18"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ssh -T git@github.com  #github
</span></span><span class="line"><span class="cl">ssh -T git@coding.net   #coding
</span></span><span class="line"><span class="cl">ssh -T git@gitee.com   #gitee</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>注意#注释部分不要的</strong></p>
<h4 id="站点配置文件">站点配置文件</h4>
<p>打开站点配置文件填写代码库</p>
<p>例如我的</p>
<div class="highlight" id="id-19"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">deploy:
</span></span><span class="line"><span class="cl">- type: git
</span></span><span class="line"><span class="cl">  repository:
</span></span><span class="line"><span class="cl">    github: git@github.com:Lruihao/Lruihao.github.io.git,master
</span></span><span class="line"><span class="cl">    coding: git@git.coding.net:liruihao/liruihao.git,master
</span></span><span class="line"><span class="cl">  #message: &#34;日常更新&#34;</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="部署">部署</h4>
<div class="highlight" id="id-20"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">hexo clean
</span></span><span class="line"><span class="cl">hexo g -d</span></span></code></pre></td></tr></table>
</div>
</div><p>没出错就可以正常通过相应域名访问了。
<a href="https://lruihao.github.io"target="_blank" rel="external nofollow noopener noreferrer">https://lruihao.github.io<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>
<a href="https://liruihao.coding.me"target="_blank" rel="external nofollow noopener noreferrer">https://liruihao.coding.me<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>
<a href="https://lruihao.gitee.io"target="_blank" rel="external nofollow noopener noreferrer">https://lruihao.gitee.io<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> <strong>//手机 hexo 效果展示</strong></p>
<h3 id="ssh-连接电脑或者服务器">ssh 连接电脑或者服务器</h3>
<div class="highlight" id="id-21"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ssh root@118.24.217.167</span></span></code></pre></td></tr></table>
</div>
</div><p>会提示输入密码，linux 下输入密码是看不到的，大家都知道，小心点别输入错误。<br>
之后就可以手机操作服务器了。</p>
<h3 id="解决-npm-安装报错未验证">解决 npm 安装报错（未验证）</h3>
<div class="highlight" id="id-22"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vim $PREFIX/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js</span></span></code></pre></td></tr></table>
</div>
</div><p>把里面的 length 改成 4，我默认的是 1。</p>
<h3 id="nyancat-彩虹猫">nyancat 彩虹猫</h3>
<p>彩虹貓（英语：Nyan Cat）是在 2011 年 4 月上传在 Youtube 的视频，并且迅速爆红于网络，並在 2011 年 YouTube 浏览量最高的视频中排名第五。</p>
<div class="highlight" id="id-23"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pkg install nyancat
</span></span><span class="line"><span class="cl">nyancat</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>还有更多姿势这里就不写了，只写一下日常用到的，就这样 OK 睡觉！</p>
</blockquote>
<h3 id="termux-更多常用有趣命令适用于-linux">termux 更多常用有趣命令（适用于 linux）</h3>
<div class="highlight" id="id-24"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">vim $PREFIX/etc/motd
</span></span><span class="line"><span class="cl">chcolor
</span></span><span class="line"><span class="cl">chfont
</span></span><span class="line"><span class="cl">~/.termux/colors.sh
</span></span><span class="line"><span class="cl">~/.termux/fonts.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">echo &#34;https://www.lruihao.cn&#34; |curl -F-=\&lt;- qrenco.de
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pkg install nyancat
</span></span><span class="line"><span class="cl">nyancat
</span></span><span class="line"><span class="cl">pkg install sl
</span></span><span class="line"><span class="cl">sl
</span></span><span class="line"><span class="cl">pkg install figlet
</span></span><span class="line"><span class="cl">figlet hello
</span></span><span class="line"><span class="cl">pkg install toilet
</span></span><span class="line"><span class="cl">toilet hello
</span></span><span class="line"><span class="cl">toilet -f mono12 -F gay &#34;hello&#34;
</span></span><span class="line"><span class="cl">pkg cowsay
</span></span><span class="line"><span class="cl">cowsay &#34;hello&#34;
</span></span><span class="line"><span class="cl">pkg install cmatrix
</span></span><span class="line"><span class="cl">cmatrix
</span></span><span class="line"><span class="cl">pkg install w3m
</span></span><span class="line"><span class="cl">w3m www.lruihao.cn</span></span></code></pre></td></tr></table>
</div>
</div><pre><code>cmatrix 常用命令如下：
cmatrix-a : 异步滚动（默认）
cmatrix-b : 随机粗体
cmatrix-B : 全部粗体
cmatrix-o : 使用旧风格滚动
cmatrix-x :X window 模式
cmatrix-V : 显示版本信息
cmatrix-u : 刷新频率，0-9，也就是滚动的快慢
cmatrix-C : 显示的颜色，支持 green（默认）,red,blue,white,yellow,cyan,
        magenta and black
例如：使用红色
cmatrix -b -C red
使用蓝色
cmatrix -b -C blue
等等 ........
主义：在运行状态下，使用 0-9 数字，可以改变运行速度快慢。
</code></pre>
<p>开启你的装逼之路把，骚年！</p>
]]></description></item><item><title>linux 编程初体验</title><link>https://lruihao.cn/posts/linux-hello-c/</link><pubDate>Mon, 15 Oct 2018 21:19:27 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/linux-hello-c/</guid><description><![CDATA[<blockquote>
<p>在 Linux 上编译 c 语言文件。</p>
</blockquote>
<h3 id="打开-vim-编辑器">打开 vim 编辑器</h3>
<p>（没有就用 vi, 或者先安装 vim<code>sudo apt-get install vim</code>)</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ vim</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="编辑文件">编辑文件</h3>
<p>打开文件编辑器之后编辑文件
</p>
<p>首先按<code>Esc</code>再<code>:</code>进入末行命令<br>
再保存为 hello.c 文件后退出</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">: w hello.c
</span></span><span class="line"><span class="cl">: q</span></span></code></pre></td></tr></table>
</div>
</div><p>打开目录看看生成的文件</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ ls</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="编译生成可执行文件并执行">编译生成可执行文件并执行</h3>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ gcc hello.c -o hello
</span></span><span class="line"><span class="cl">$ ./hello</span></span></code></pre></td></tr></table>
</div>
</div><p></p>
<p>若权限不够则加可执行权限<code>chmod +x hello</code></p>
]]></description></item><item><title>linux/centos 下的安装 git</title><link>https://lruihao.cn/posts/linux-git/</link><pubDate>Sat, 22 Sep 2018 22:28:45 +0000</pubDate><author>Jian YE</author><guid>https://lruihao.cn/posts/linux-git/</guid><description><![CDATA[<h3 id="下载-git">下载 git</h3>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">wget https://github.com/git/git/archive/v2.14.1.zip</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装依赖">安装依赖</h3>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo yum -y install zlib-devel openssl-devel cpio expat-devel gettext-devel curl-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="解压-git">解压 git</h3>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">unzip v2.14.1.zip</span></span></code></pre></td></tr></table>
</div>
</div><p>注：
unzip 命令用不了，具体步骤如下：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#yum list | grep zip/unzip 
</span></span><span class="line"><span class="cl">#yum install zip
</span></span><span class="line"><span class="cl">#yum install unzip</span></span></code></pre></td></tr></table>
</div>
</div><p>基本完成，如果在编译的时候出现错误：<code>gcc : error trying to exec 'cc1plus': execvp : No sunch file or directory</code><br>
可以用<code>gcc -v/g++ -v</code> 来查看 gcc 版本，会发现没有安装。安装如下：</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#yum list | grep gcc
</span></span><span class="line"><span class="cl">#yum install gcc-c++
</span></span><span class="line"><span class="cl">#yum install unzip</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="将-git-安装到usrlocal-上">将 git 安装到/usr/local 上</h3>
<p>先进入 git 文件夹<br>
编译<br>
安装</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd git-2.14.1
</span></span><span class="line"><span class="cl">make prefix=/usr/local all
</span></span><span class="line"><span class="cl">make prefix=/usr/local install</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="验证是否安装完成">验证是否安装完成</h3>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git --version</span></span></code></pre></td></tr></table>
</div>
</div><p>&hellip;</p>
]]></description></item></channel></rss>